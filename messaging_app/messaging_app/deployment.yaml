# ---------------------------
# MySQL Deployment and Service
# ---------------------------
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          env:
            - name: MYSQL_DATABASE
              value: "messaging_app_db"
            - name: MYSQL_USER
              value: "sewalew"
            - name: MYSQL_PASSWORD
              value: "Sew@bunna123"
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpassword123"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          emptyDir: {} # for testing; use PersistentVolumeClaim in production

# ---------------------------
# Django Deployment and Service
# ---------------------------
---
apiVersion: v1
kind: Service
metadata:
  name: messaging-app-service
spec:
  selector:
    app: messaging-app
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-app-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: messaging-app
  template:
    metadata:
      labels:
        app: messaging-app
    spec:
      containers:
        - name: messaging-app
          image: messaging_app:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          env:
            - name: MYSQL_DB
              value: "messaging_app_db"
            - name: MYSQL_USER
              value: "sewalew"
            - name: MYSQL_PASSWORD
              value: "Sew@bunna123"
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpassword123"
            - name: MYSQL_HOST
              value: "mysql" # Must match the MySQL service name
            - name: MYSQL_PORT
              value: "3306"
            - name: DEBUG
              value: "True"
            - name: SECRET_KEY
              value: "django-insecure-p317jofm)2fl=zbg90j4^r$v(73g&m@^f1n50rnr52v(v$%yn$"
            - name: DJANGO_ALLOWED_HOSTS
              value: "localhost,127.0.0.1,0.0.0.0,web"
      initContainers:
        - name: wait-for-mysql
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z mysql 3306; do echo waiting for mysql; sleep 2; done;",
            ]
